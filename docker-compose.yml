version: '3.4'

services:
  account.api1:
    container_name: account_api_1
    image: ${DOCKER_REGISTRY-}accountapi
    build:
      context: .
      dockerfile: src/Account.Api/Dockerfile
    depends_on:
      - db
      - redis
    environment:
      - ConnectionStrings__AccountApiContext=Host=db;Port=5432;Database=AccountApiContext;Username=postgres;Password=mysecretpassword;Pooling=true;MinPoolSize=1;MaxPoolSize=100;ConnectionIdleLifetime=300;
      - REDIS_HOST=redis
    networks:
      - nginx
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "90MB"

  account.api2:
    container_name: account_api_2
    image: ${DOCKER_REGISTRY-}accountapi
    build:
        context: .
        dockerfile: src/Account.Api/Dockerfile
    depends_on:
        - db
        - redis
    environment:
        - ConnectionStrings__AccountApiContext=Host=db;Port=5432;Database=AccountApiContext;Username=postgres;Password=mysecretpassword;Pooling=true;MinPoolSize=1;MaxPoolSize=100;ConnectionIdleLifetime=300;
        - REDIS_HOST=redis
    networks:
      - nginx
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "90MB"

  redis:
    container_name: redis
    image: redis
    networks:
      - nginx
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "50MB"

  nginx:
    container_name: load_balancing
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - account.api1
      - account.api2
    ports:
      - "9999:9999"
    networks:
      - nginx
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "20MB"

  db:
    container_name: postgres_db
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: AccountApiContext
    ports:
      - "5432:5432"
    volumes:
      - ./script.sql:/docker-entrypoint-initdb.d/script.sql
    command: >
      postgres
      -c checkpoint_timeout=300
      -c max_wal_size=1GB
      -c max_connections=100
      -c shared_buffers=64MB
      -c synchronous_commit=on
      -c fsync=on
      -c full_page_writes=on
      -c work_mem=16MB
      -c maintenance_work_mem=64MB
      -c effective_cache_size=256MB
      -c wal_buffers=16MB
      -c checkpoint_completion_target=0.9
    networks:
      - nginx
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "300MB"
        
networks:
  nginx:
    driver: bridge